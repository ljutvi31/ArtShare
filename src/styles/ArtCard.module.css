.card {
  position: relative;
  overflow: hidden;
  border: 1px solid var(--border);
  border-radius: var(--radius-xl);
  background: var(--surface);
  box-shadow: var(--shadow-sm);
  transition: var(--transition-slow);
  cursor: pointer;
  isolation: isolate;
  height: fit-content;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.03), rgba(147, 51, 234, 0.03));
  opacity: 0;
  transition: var(--transition-slow);
  z-index: -1;
}

.card:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: var(--shadow-xl);
  border-color: var(--primary-200);
}

.card:hover::before {
  opacity: 1;
}

.imageContainer {
  position: relative;
  overflow: hidden;
  border-radius: var(--radius-xl) var(--radius-xl) 0 0;
  aspect-ratio: 4/3;
  background: var(--gray-100);
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  transition: var(--transition-slow);
}

.card:hover .image {
  transform: scale(1.1);
  filter: brightness(1.1) saturate(1.2);
}

.imageOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    180deg,
    transparent 0%,
    transparent 60%,
    rgba(0, 0, 0, 0.1) 100%
  );
  opacity: 0;
  transition: var(--transition);
}

.card:hover .imageOverlay {
  opacity: 1;
}

.styleChip {
  position: absolute;
  top: var(--space-4);
  left: var(--space-4);
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-full);
  font-size: var(--text-xs);
  font-weight: 700;
  color: var(--text-primary);
  box-shadow: var(--shadow-md);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  transform: translateY(0);
  transition: var(--transition-slow);
}

.card:hover .styleChip {
  transform: translateY(-2px);
  background: rgba(59, 130, 246, 0.95);
  color: white;
  border-color: rgba(59, 130, 246, 0.3);
}

.content {
  padding: var(--space-6);
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.header {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.title {
  margin: 0;
  font-size: var(--text-xl);
  font-weight: 700;
  line-height: 1.3;
  color: var(--text-primary);
  transition: var(--transition);
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.card:hover .title {
  color: var(--primary-600);
}

.meta {
  margin: 0;
  color: var(--text-muted);
  font-size: var(--text-sm);
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: var(--space-2);
}

.meta::before {
  content: '✨';
  font-size: var(--text-base);
  opacity: 0.7;
}

.badge {
  display: inline-flex;
  align-items: center;
  gap: var(--space-2);
  border: 2px solid var(--warning);
  background: linear-gradient(135deg, #fffbeb, #fef3c7);
  color: #92400e;
  border-radius: var(--radius-full);
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-xs);
  font-weight: 700;
  box-shadow: var(--shadow-md);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  position: relative;
  overflow: hidden;
  animation: badgeGlow 2s ease-in-out infinite alternate;
}

@keyframes badgeGlow {
  0% {
    box-shadow: var(--shadow-md);
  }
  100% {
    box-shadow: 0 4px 20px rgba(245, 158, 11, 0.4);
  }
}

.badge::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  transform: rotate(45deg);
  animation: badgeShine 3s ease-in-out infinite;
}

@keyframes badgeShine {
  0%, 100% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
  }
  50% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
  }
}

.actions {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--space-4);
  padding-top: var(--space-4);
  border-top: 1px solid var(--border);
}

.likeButton {
  display: inline-flex;
  align-items: center;
  gap: var(--space-2);
  padding: var(--space-3) var(--space-4);
  border: 2px solid var(--border);
  border-radius: var(--radius-lg);
  background: var(--surface);
  color: var(--text-primary);
  font-weight: 600;
  font-size: var(--text-sm);
  cursor: pointer;
  transition: var(--transition-slow);
  box-shadow: var(--shadow-xs);
  position: relative;
  overflow: hidden;
}

.likeButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: left 0.5s ease;
}

.likeButton:hover::before {
  left: 100%;
}

.likeButton:hover {
  background: var(--primary-600);
  border-color: var(--primary-600);
  color: white;
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.likeButton:active {
  transform: translateY(0);
  box-shadow: var(--shadow);
}

.likeButton.liked {
  animation: likeAnimation 0.6s ease-out;
}

@keyframes likeAnimation {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
    background: var(--success);
    border-color: var(--success);
  }
  100% {
    transform: scale(1);
  }
}

.shareActions {
  display: flex;
  align-items: center;
  gap: var(--space-3);
}

.shareButton {
  display: inline-flex;
  align-items: center;
  gap: var(--space-2);
  padding: var(--space-2) var(--space-3);
  border: 2px solid var(--border);
  border-radius: var(--radius-lg);
  background: var(--surface);
  color: var(--text-secondary);
  font-weight: 600;
  font-size: var(--text-sm);
  cursor: pointer;
  transition: var(--transition);
  box-shadow: var(--shadow-xs);
}

.shareButton:hover {
  background: var(--warning);
  border-color: var(--warning);
  color: white;
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.shareLink {
  color: var(--text-muted);
  text-decoration: none;
  font-size: var(--text-xs);
  font-weight: 700;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-md);
  transition: var(--transition);
  background: var(--gray-100);
  border: 1px solid var(--border);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  position: relative;
  overflow: hidden;
}

.shareLink::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: linear-gradient(135deg, var(--primary-600), var(--primary-700));
  transition: var(--transition);
  z-index: -1;
}

.shareLink:hover::before {
  width: 100%;
}

.shareLink:hover {
  color: white;
  border-color: var(--primary-600);
  transform: translateY(-1px);
}

/* Animation d'entrée */
.card {
  animation: cardFadeIn 0.6s ease-out forwards;
}

@keyframes cardFadeIn {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive */
@media (max-width: 768px) {
  .content {
    padding: var(--space-4);
    gap: var(--space-3);
  }
  
  .title {
    font-size: var(--text-lg);
  }
  
  .actions {
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-3);
  }
  
  .shareActions {
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .likeButton,
  .shareButton {
    justify-content: center;
  }
}

/* États de focus pour l'accessibilité */
.likeButton:focus,
.shareButton:focus,
.shareLink:focus {
  outline: 2px solid var(--primary-500);
  outline-offset: 2px;
}

/* Préparation pour le mode sombre */
@media (prefers-color-scheme: dark) {
  .styleChip {
    background: rgba(31, 41, 55, 0.95);
    color: var(--gray-200);
    border-color: rgba(31, 41, 55, 0.3);
  }
  
  .card:hover .styleChip {
    background: rgba(59, 130, 246, 0.95);
    color: white;
  }
}

/* Accessibilité - réduction des animations */
@media (prefers-reduced-motion: reduce) {
  .card,
  .image,
  .styleChip,
  .title,
  .likeButton,
  .shareButton,
  .shareLink,
  .badge {
    transition: none;
    animation: none;
  }
  
  .card:hover {
    transform: none;
  }
  
  .card:hover .image {
    transform: none;
  }
}